#include <cstdint>
#include <iostream>

//shader
#include "add.h"

#include <hephaistos/hephaistos.hpp>
using namespace hephaistos;

int main() {
    //create context
	auto context = createContext();

	//print selected device
	auto device = getDeviceInfo(context);
	std::cout << "Selected Device: " << device.name << "\n\n";

    //create cpu memory
	Buffer<uint32_t> buffer1(context, { 15, 36, 51, 12, 99, 102, 12, 33, 54, 22 });
	Buffer<uint32_t> buffer2(context, { 13, 12, 28, 23, 94, 56, 72, 28, 44, 13 });
	Buffer<uint32_t> buffer3(context, 10);
	//create gpu memory
	Tensor<uint32_t> tensor1(context, 10);
	Tensor<uint32_t> tensor2(context, 10);
	Tensor<uint32_t> tensor3(context, 10);

    //create Program
    Program program(context, code);
    program.bindParameterList(tensor1, tensor2, tensor3);

    //create sequence
    Timeline timeline(context);
    beginSequence(timeline)
        .And(updateTensor(buffer1, tensor1))
        .And(updateTensor(buffer2, tensor2))
        .Then(program.dispatch(10))
        .Then(retrieveTensor(tensor3, buffer3))
		.Submit();

	//If we don't catch the submission generated by Submit()
	//the execution is paused until it's finished

    //read out
	for (auto v : buffer3.getMemory()) {
		std::cout << v << '\n';
	}
}
